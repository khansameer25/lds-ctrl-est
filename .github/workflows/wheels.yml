name: Build Python Wheels

on:
  push:
    branches: [test]
  pull_request:
    branches: [test]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies with vcpkg
        run: |
          # Bootstrap vcpkg if needed
          if [ ! -f "./vcpkg/vcpkg" ]; then
            ./vcpkg/bootstrap-vcpkg.sh
          fi
          # Install dependencies using the project's vcpkg.json
          ./vcpkg/vcpkg install --triplet=x64-osx

      - name: Verify vcpkg installation
        run: |
          echo "Vcpkg installation directory:"
          ls -la vcpkg_installed/x64-osx/
          echo "Toolchain file:"
          ls -la vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          CIBW_BUILD: "cp311-*" # Build only Python 3.11 for faster iteration
          CIBW_SKIP: "pp*" # Skip PyPy builds (incompatible with pybind11)
          CIBW_ENVIRONMENT_MACOS: CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake CMAKE_PREFIX_PATH=${{ github.workspace }}/vcpkg_installed/x64-osx LDSCTRLEST_BUILD_PYTHON=ON
          CIBW_BEFORE_BUILD_MACOS: echo "CMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE" && echo "CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH" && echo "LDSCTRLEST_BUILD_PYTHON=$LDSCTRLEST_BUILD_PYTHON" && ls -la ${{ github.workspace }}/vcpkg_installed/x64-osx/
          CIBW_TEST_COMMAND: python -c "import sys; print('Python version:', sys.version); print('Looking for ldsctrlest modules...'); import ldsctrlest; print('âœ… Import successful!')"
        with:
          package-dir: python

      - name: List built wheels
        run: |
          ls -la wheelhouse/
          echo "Inspecting wheel contents:"
          unzip -l wheelhouse/*.whl
          echo "Looking for .so files:"
          unzip -Z wheelhouse/*.whl | grep -E '\.(so|dylib)' || echo "No .so/.dylib files found"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
